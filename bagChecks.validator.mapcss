meta{
   title: "BAG imports (NL)";
   version: "0.8";
   description: "Additions to JOSM validator that should be useful for BAG imports in NL";
   authors: "smootheFiets, Sander H";
}


area[/^(building|building:part|man_made)$/] ⊉ node[addr:housenumber][!entrance] {
  throwWarning: tr("Address not inside building");
}
/* entrance: some mappers add entrances (with address info) to building outline */
/* man_made: for man_made=tower */


area[building][building!=static_caravan][building!=houseboat][!start_date]["ref:bag"][inside("NL")]  {
   throwWarning: tr("BAG-building without start_date.  Could be a houseboat or a static caravan."); 
}

/* power=generator: windmolens mogen best node's zijn, staan wel in de BAG */
node["ref:bag"][inside("NL")][power!=generator]{
   throwError: tr("Node with ref:bag; ref:bag is reserved to building outlines");
}

node[power=generator]["generator:source"=wind] ⊆ area[building]{
   throwWarning: tr("Wind turbine contained in building");
}

node[building][inside("NL")]{
   throwError: tr("Node with building tag; reserved to building outlines");
}

area["ref:bag"][!building][!"building:part"][landuse!=houseboat][landuse!=static_caravan][inside("NL")],
area["ref:bag"][building=no][inside("NL")]
{
   throwWarning: tr("Building tag missing?  ref:bag without building, nor landuse=houseboat/static_caravan");
}

/* will catch buildings with timestamps before 2020, i.e., thru 2019/12/31 */
/* hard-wired age limit to before 2020; adapt later as needed */
/* I couldn't find a way to make timestamp search relative to today, e.g., objects older than two years.  Feature request in JOSM? */
area[building][!"ref:bag"][inside("NL")][JOSM_search("timestamp:/2020")]!:modified{
   throwWarning: tr("Non-BAG building hasn't been touched in a while; is it still there?");
}  
/* syntax copied from https://github.com/majkaz/JOSM-styles/blob/master/age.mapcss */


/* accept address nodes on a building outline -- some mappers tag entrances that way */
way[!building] node["addr:housenumber"][amenity!=parking][inside("NL")]{
   throwError: tr("Address node on a way; should be inside a building!");
}


